# Generated by Django 5.2.6 on 2025-09-11 20:16

import django.db.models.deletion
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0005_deliveryaddress"),
        ("orders", "0001_initial"),
        ("products", "0002_alter_product_color"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="deliveryaddress",
            options={"ordering": ["-is_default", "-created_at"]},
        ),
        migrations.RenameField(
            model_name="deliveryaddress",
            old_name="province",
            new_name="state",
        ),
        migrations.AddField(
            model_name="deliveryaddress",
            name="country",
            field=models.CharField(default="United States", max_length=100),
        ),
        migrations.AddField(
            model_name="deliveryaddress",
            name="instructions",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="deliveryaddress",
            name="latitude",
            field=models.DecimalField(
                blank=True, decimal_places=6, max_digits=9, null=True
            ),
        ),
        migrations.AddField(
            model_name="deliveryaddress",
            name="longitude",
            field=models.DecimalField(
                blank=True, decimal_places=6, max_digits=9, null=True
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="bio",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="language_preference",
            field=models.CharField(default="en", max_length=10),
        ),
        migrations.AddField(
            model_name="user",
            name="privacy_settings",
            field=models.JSONField(blank=True, default=dict, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="social_links",
            field=models.JSONField(blank=True, default=dict, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="timezone",
            field=models.CharField(default="UTC", max_length=50),
        ),
        migrations.AddField(
            model_name="user",
            name="website",
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="deliveryaddress",
            name="address_type",
            field=models.CharField(
                choices=[("home", "Home"), ("work", "Work"), ("other", "Other")],
                default="home",
                max_length=50,
            ),
        ),
        migrations.CreateModel(
            name="BugReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bug_type",
                    models.CharField(
                        choices=[
                            ("app_crash", "App Crash"),
                            ("login_issues", "Login Issues"),
                            ("payment_problems", "Payment Problems"),
                            ("search_not_working", "Search Not Working"),
                            ("images_not_loading", "Images Not Loading"),
                            ("slow_performance", "Slow Performance"),
                            ("ui_display_issues", "UI/Display Issues"),
                            ("notification_problems", "Notification Problems"),
                            ("cart_issues", "Cart Issues"),
                            ("profile_settings", "Profile/Settings"),
                            ("messaging_problems", "Messaging Problems"),
                            ("other", "Other"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("always", "Always"),
                            ("often", "Often"),
                            ("sometimes", "Sometimes"),
                            ("rarely", "Rarely"),
                            ("once", "Once"),
                        ],
                        max_length=10,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("steps_to_reproduce", models.TextField(blank=True, null=True)),
                ("expected_behavior", models.TextField(blank=True, null=True)),
                ("actual_behavior", models.TextField(blank=True, null=True)),
                ("device_info", models.JSONField(blank=True, default=dict, null=True)),
                ("app_version", models.CharField(blank=True, max_length=20, null=True)),
                ("os_version", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "browser_info",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("screenshots", models.JSONField(blank=True, default=list, null=True)),
                ("log_files", models.JSONField(blank=True, default=list, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                ("admin_notes", models.TextField(blank=True, null=True)),
                ("resolution", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bug_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feedback_type",
                    models.CharField(
                        choices=[
                            ("general", "General Feedback"),
                            ("feature_request", "Feature Request"),
                            ("improvement", "Improvement Suggestion"),
                            ("ux", "User Experience"),
                            ("performance", "Performance Issue"),
                            ("design", "Design Feedback"),
                            ("content", "Content Suggestion"),
                            ("vendor", "Vendor Experience"),
                            ("app_store", "App Store Review"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("message", models.TextField()),
                ("overall_rating", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "ease_of_use_rating",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("features_rating", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "performance_rating",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("is_anonymous", models.BooleanField(default=False)),
                ("device_info", models.JSONField(blank=True, default=dict, null=True)),
                ("app_version", models.CharField(blank=True, max_length=20, null=True)),
                ("is_processed", models.BooleanField(default=False)),
                ("admin_notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("push_notifications", models.BooleanField(default=True)),
                ("push_orders", models.BooleanField(default=True)),
                ("push_promotions", models.BooleanField(default=False)),
                ("push_messages", models.BooleanField(default=True)),
                ("push_reviews", models.BooleanField(default=True)),
                ("email_notifications", models.BooleanField(default=False)),
                ("email_orders", models.BooleanField(default=True)),
                ("email_promotions", models.BooleanField(default=False)),
                ("email_messages", models.BooleanField(default=False)),
                ("email_reviews", models.BooleanField(default=True)),
                ("email_newsletter", models.BooleanField(default=False)),
                ("sms_notifications", models.BooleanField(default=False)),
                ("sms_orders", models.BooleanField(default=True)),
                ("sms_promotions", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("credit_card", "Credit Card"),
                            ("debit_card", "Debit Card"),
                            ("paypal", "PayPal"),
                            ("apple_pay", "Apple Pay"),
                            ("google_pay", "Google Pay"),
                            ("bank_transfer", "Bank Transfer"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_default", models.BooleanField(default=False)),
                (
                    "card_last_four",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                ("card_brand", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "card_exp_month",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                (
                    "card_exp_year",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                (
                    "gateway_payment_method_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "gateway_customer_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "billing_address",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_methods",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-is_default", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SupportTicket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ticket_number", models.CharField(max_length=20, unique=True)),
                (
                    "ticket_type",
                    models.CharField(
                        choices=[
                            ("general", "General Inquiry"),
                            ("order", "Order Issue"),
                            ("payment", "Payment Problem"),
                            ("account", "Account Help"),
                            ("product", "Product Question"),
                            ("shipping", "Shipping & Delivery"),
                            ("returns", "Returns & Refunds"),
                            ("technical", "Technical Issue"),
                            ("vendor", "Vendor Support"),
                            ("bug_report", "Bug Report"),
                            ("feedback", "Feedback"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("in_progress", "In Progress"),
                            ("pending_customer", "Pending Customer"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                ("subject", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("attachments", models.JSONField(blank=True, default=list, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_account_tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_support_tickets",
                        to="orders.order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_support_tickets",
                        to="products.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_support_tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="VendorProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("business_name", models.CharField(max_length=200)),
                ("business_description", models.TextField(blank=True, null=True)),
                (
                    "business_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None
                    ),
                ),
                (
                    "business_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("business_website", models.URLField(blank=True, null=True)),
                (
                    "business_address",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "business_city",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "business_state",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "business_country",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "business_postal_code",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("tax_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "business_license",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "business_categories",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "verification_documents",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                ("verification_notes", models.TextField(blank=True, null=True)),
                ("total_products", models.PositiveIntegerField(default=0)),
                (
                    "total_sales",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "average_rating",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=3),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vendor_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
